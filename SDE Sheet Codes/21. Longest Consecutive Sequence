#include <bits/stdc++.h>

int lengthOfLongestConsecutiveSequence(vector<int> &arr, int n) {
    // Write your code here.
    // Brute force : TC -> O(NlogN)
    // sort(arr.begin(),arr.end());
    // int ans=0;
    // int cnt=0;
    // int curr_smallest = INT_MIN;
    // for(auto it:arr){
    //     if(curr_smallest < it){
    //         if(curr_smallest==INT_MIN){
    //             curr_smallest = it;
    //             cnt=1;
    //         }
    //         else{
    //             if(curr_smallest+1 == it){
    //                 curr_smallest = it;
    //                 cnt++;
    //             }
    //             else{
    //                 curr_smallest = it;
    //                 cnt=1;
    //             }
    //         }
    //     }
    //     ans=max(ans,cnt);
    // }
    // return ans;

    // Better : TC -> O(N) SC -> O(N)
    if(n==0) return 0;
    unordered_set<int>st;
    for(auto it:arr) st.insert(it);

    int cnt=0;
    int ans=1;
    for(auto it:st){
        // check if arr[i]-1 is present in set or not
        // if not present
        if(st.find(it-1)==st.end()){
            int num = it;
            cnt = 1;
            while(st.find(num+1)!=st.end()){
                num +=1;
                cnt++;
            }
        }
        ans = max(ans,cnt);
    }
    return ans;
}
