/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

int length(Node* head){
     int i=0;
     while(head){
          head = head->next;
          i++;
     }
     return i;
}

Node *rotate(Node *head, int k) {
     // Write your code here.
     if(!head || !head->next) return head;

     int l=length(head);
     k = k%l;
     if(k==0) return head; 
     k = abs(k-l);


     Node* newend = NULL;
     Node* curr = head;
     Node* mid;
     Node* newHead = NULL;
     while(curr){
          if(k==0){
               newHead = curr;
          }
          else if(k>0){
               newend = curr;
          }
          if(!curr->next) mid = curr;
          curr = curr->next;
          k--;
     }
     newend->next = NULL;
     mid->next=head;

     return newHead;

}
