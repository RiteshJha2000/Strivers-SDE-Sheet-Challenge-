#include <bits/stdc++.h> 

int cnt;
void merge(vector<int>&arr,long long *temp,int l,int mid,int r){

	int i=l;
    int k=l;
    int j=mid+1;
    while(i<=mid && j<=r){
        if((long long)arr[i]>(long long)2*arr[j]){
			cnt += mid+1-i;
			j++;
        }
        else{
            i++;
        }
    }
	
    i=l;
    j=mid+1;
    while(i<=mid && j<=r){
        if(arr[i]>arr[j]){
            if((long long)arr[i]>(long long)2*arr[j]){
			    cnt += mid+1-i;
            }
            temp[k] = arr[j];
            j++; k++;
        }
        else{
            temp[k]=arr[i];
            k++; i++;
        }
    }
    while(i<=mid){
        temp[k] = arr[i];
        i++; k++;
    }
    while(j<=r){
        temp[k] = arr[j];
        j++; k++;
    }
    for(int i=l;i<=r;i++) arr[i] = temp[i];
    return ;
}

void mergeSort(vector<int>&arr,long long *temp,int l,int r){
    if(l<r){
        int mid = (l+r)/2;
        mergeSort(arr,temp,l,mid);
        mergeSort(arr,temp,mid+1,r);
        merge(arr,temp,l,mid,r);
    }
    return ;
}


int reversePairs(vector<int> &arr, int n){
	// Write your code here.	
	long long temp[n];
	cnt=0;
  mergeSort(arr,temp,0,n-1);
	return cnt;
}
