#include <bits/stdc++.h>

/*************************************************************

    Following is the LinkedListNode class structure

    template <typename T>   
    class LinkedListNode
    {
        public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode<T> *random;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*************************************************************/

LinkedListNode<int> *cloneRandomList(LinkedListNode<int> *head)
{
    // Write your code here.
    if(!head) return NULL;

    // step 1
    // create next pointer
    LinkedListNode<int>* temp = head;
    while(temp){
        LinkedListNode<int>* curr = new LinkedListNode<int>(temp->data);
        LinkedListNode<int>* nxt = temp->next;
        temp->next = curr;
        curr->next = nxt;
        temp = nxt;
    }

    // step 2
    // create random pointer
    temp = head;
    while(temp){
        if(!temp->random) temp->next->random = NULL;
        else temp->next->random = temp->random->next;
        temp = temp->next->next;
    }

    // step 3
    // obtain orginal and copy list
    LinkedListNode<int>* newHead = new LinkedListNode<int>(-1);
    LinkedListNode<int>* itr = newHead;
    LinkedListNode<int>* curr = head;
    LinkedListNode<int>* front = head->next->next;
    while(curr){
        itr->next = curr->next;
        curr->next = front;
        curr = front;
        if(front) front = front->next->next;
        itr = itr->next;
    }
    return newHead->next;
}
