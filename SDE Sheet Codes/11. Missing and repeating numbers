#include <bits/stdc++.h>

int set_bit(int n){
	int i=1;
	while(n>0){
		if((n & 1)!=0){
			return i;
		}
		i++;
		n = n>>1;
	}
	return -1;
}

pair<int,int> missingAndRepeating(vector<int> &arr, int n)
{
	// Write your code here 
	int Xor = 0;
	for(int i=0;i<arr.size();i++){
		Xor ^= arr[i];
		Xor ^= i+1;
	}

	// a ^ b = Xor

	// position of right most bit eg: 1 or 2 ,etc
	int num = set_bit(Xor)-1;

	int zero = 0; // store xor of number whose set bit is 0 at end
	int one = 0;  // store xor of number whose set bit is 1 at end
	for(auto it:arr){
		if(it&(1<<num)) one ^= it;
		else zero ^= it;
	}

	for(int i=1;i<=arr.size();i++){
		if(i&(1<<num)) one ^= i;
		else zero ^= i;
	}

	for(auto it:arr){
		if(it==one) return {zero,one};
	}
	return {one,zero};
}
