class Solution {
private:
    void swapIfGreater(vector<int>& arr1,vector<int>& arr2,int idx1,int idx2){
        if(arr1[idx1]>arr2[idx2])
        swap(arr1[idx1],arr2[idx2]);
    }
public:
    void merge(vector<int>& arr1, int n, vector<int>& arr2, int m) {
        // int i=m;
        // int j=0;
        // while(j<n){
        //     swap(nums1[i],nums2[j]);
        //     i++;
        //     j++;
        // }
        // sort(nums1.begin(),nums1.end());

        // int i=n-1;
        // int j=0;
        // while(i>=0 && j<m){
        //     if(arr1[i]>arr2[j]){
        //         swap(arr1[i],arr2[j]);
        //         i--;
        //         j++;
        //     }
        //     else{
        //         break;
        //     }
        // }
        // sort(arr1.begin(),arr1.begin()+n);
        // sort(arr2.begin(),arr2.end());

        // i=n;
        // j=0;
        // while(j<m){
        //     arr1[i]=arr2[j];
        //     i++; j++;
        // }


        // Gap method
        int len = (n+m);
        int gap = (len / 2) + (len % 2);  // another way of writing ceil is gap = len/2 + len%2 ;
        while(gap>0){
            int left = 0;
            int right = left+gap;
            while(right<len){
                // if left is in arr1 and right is in arr2
                if(left<n && right>=n){
                    swapIfGreater(arr1,arr2,left,right-n);
                }
                
                // if left is in arr2 and right is in arr2
                else if(left>=n){
                    swapIfGreater(arr2,arr2,left-n,right-n);
                }

                // if left is in arr1 and right is in arr1
                else{
                    swapIfGreater(arr1,arr1,left,right);
                }
                left++;
                right++;
            }
            if(gap==1) break;
            gap = (gap / 2) + (gap % 2);
        } 

        for(auto it:arr1) cout<<it<<" ";
        cout<<endl;
        for(auto it:arr2) cout<<it<<" ";
        cout<<endl;

        // arr1 and arr2 get sorted
        int i=n;
        int j=0;
        while(j<m){
            arr1[i]=arr2[j];
            i++; j++;
        }
    }
};
