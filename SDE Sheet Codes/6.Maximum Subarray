class Solution {
public:

    int maxSubArray(vector<int>& nums) {
        // Using Kadanes Algo
        // TC -> O(N) SC->O(1)
        int currSum=0;
        int maxSum=INT_MIN;

        for(int i=0;i<nums.size();i++){
            currSum += nums[i];
            if(maxSum < currSum){
                maxSum = currSum;
            }
            if(currSum < 0) currSum=0;
        }   
        return maxSum;

        // Using DP
        // TC -> O(N) SC->O(N)
        int n = nums.size();
        int dp[n];
        dp[0]=nums[0];
        int curr = dp[0];
        for(int i=1;i<n;i++){
            dp[i] = nums[i] + (dp[i-1]>0 ? dp[i-1]:0);
            curr = max(curr,dp[i]);
        }
        return curr;
    }
};
