#include <bits/stdc++.h> 

struct meeting{
    int start;
    int end;
    int pos;
};

bool comparator(struct meeting m1,meeting m2){
    if(m1.end < m2.end) return true;
    else if(m1.end > m2.end) return false;
    else if(m1.pos < m2.pos) return true;
    return false;
}

vector<int> maximumMeetings(vector<int> &start, vector<int> &end) {
    // Write your code here.
    // int n = start.size();
    // vector<vector<int>>v(n);
    // for(int i=0;i<n;i++){
    //     v[i] = {end[i],i+1,start[i]};
    // }

    // sort(v.begin(),v.end());

    // int cnt=0;
    // int end1 = -1;
    // vector<int>ans;
    // for(int i=0;i<n;i++){
    //     int start1 = v[i][2];
    //     if(end1 < start1){
    //         end1 = v[i][0];
    //         ans.push_back(v[i][1]);
    //     }
    // }

    // return ans;

    int n = start.size();
    struct meeting meet[n];
    for(int i=0;i<n;i++){
        meet[i].start = start[i], meet[i].end = end[i], meet[i].pos = i+1;
    }

    sort(meet,meet+n,comparator);

    vector<int>ans;
    int end1 = -1;
    for(int i=0;i<n;i++){
        int start1 = meet[i].start;
        if(end1 < start1){
            end1 = meet[i].end;
            ans.push_back(meet[i].pos);
        }
    }

    return ans;
}
